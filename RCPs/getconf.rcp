#
# Sample Recipe script
#

################################################################################
prepare(){ # Run on local
################################################################################
[ ! -d ${__NODECONF} ] && echo "${__NODECONF} is not Directory. Error exit." && exit 1

[ ! -d ${__WORKS}    ] && rm -rf ${__WORKS}    && mkdir ${__WORKS}
[ ! -d ${__INFOS}    ] && rm -rf ${__INFOS}    && mkdir ${__INFOS}
[ ! -d ${__CONFS}    ] && rm -rf ${__CONFS}    && mkdir ${__CONFS}
[ ! -d ${__BAKCONFS} ] && rm -rf ${__BAKCONFS} && mkdir ${__BAKCONFS}

# Need to set $?=0
exit 0
}


################################################################################
main(){ # Run on remote
################################################################################
_OS=`checkos -k | tr [:upper:] [:lower:]`
_DIST=`checkos -d | tr [:upper:] [:lower:]`

case "${_OS}" in
  freebsd)
    _TARGET="/etc /usr/local/etc /boot/loader.conf*"
    _LSOPT="-lRo"
    _STATOPT="-f"
    _STATFMTOPT="%p %l %Su %u %Sg %g \"%Sf\" %N"
    _PKG_CMD="/usr/sbin/pkg"
    _PKG_OPT="info -a"
  ;;
  linux)
    case "${_DIST}" in
      centos*)
        _TARGET="/etc"
        _LSOPT="-lR"
        _STATOPT="--format"
        if [ -z "`sudo command -v restorecon`" ]; then
          _STATFMTOPT="%a %h %U %u %G %g \"\" %n"
        else
          _STATFMTOPT="%a %h %U %u %G %g \"%C\" %n"
        fi
        _PKG_CMD="/usr/bin/yum"
        _PKG_OPT="list installed"
      ;;
      ubuntu)
        _TARGET="/etc"
        _LSOPT="-lR"
        _STATOPT="--format"
        if [ -z "`sudo command -v restorecon`" ]; then
          _STATFMTOPT="%a %h %U %u %G %g \"\" %n"
        else
          _STATFMTOPT="%a %h %U %u %G %g \"%C\" %n"
        fi
        _PKG_CMD="/usr/bin/apt"
        _PKG_OPT="list --installed"
      ;;
    esac
  ;;
  *)
    echo "Not Supported Platform" >&2
    exit 1
  ;;
esac

_TMP_CURDIR=${PWD}
for i in ${_TARGET}; do
  [ ! -e ${i} ] && continue
  sudo ls ${_LSOPT} ${i} >> ${__TGT_SCRDIR}/ls-lR.txt
  (cd /; sudo find ${i#/} -type f -exec stat ${_STATOPT} "${_STATFMTOPT}" {} \; ) >> ${__TGT_SCRDIR}/stat.txt
  (cd /; sudo find ${i#/} -type f | sudo tar rf ${_TMP_CURDIR}/${__TGT_SCRDIR}/archive.tar -T - )
done
echo "OS=\"${_OS}\""     >> ${__TGT_SCRDIR}/OS-DIST.txt
echo "DIST=\"${_DIST}\"" >> ${__TGT_SCRDIR}/OS-DIST.txt
sudo ${_PKG_CMD} ${_PKG_OPT} > ${__TGT_SCRDIR}/PACKAGES.txt
sudo gzip -9 ${__TGT_SCRDIR}/archive.tar
}

################################################################################
afterwords(){ # Run on local
################################################################################
__DATE=$(date "+%Y%m%d%H%M%S")
__CONFDIR="${__BAKCONFS}/${__TGT}-${__DATE}"
__INFODIR="${__BAKCONFS}/${__TGT}-${__DATE}-info"

scp ${__SSH_OPT} -q -rp "${__RUSR}@${__TGT}:${__TGT_SCRDIR}/*" ${__WORKS}

# backup old configurations
[ -e ${__CONFS}/${__TGT}    ] && rm ${__CONFS}/${__TGT}
[ -e ${__INFOS}/${__TGT}    ] && rm ${__INFOS}/${__TGT}

__PWD__=${PWD}
cd ${__BAKCONFS}

i=`ls -1d ${__TGT}* 2> /dev/null | grep -Ee "${__TGT}-[0-9]{14}$"`
if [ ! -z ${i} ]; then
  tar czf ${i}.tgz ${i} ${i}-info
  rm -rf ${i} ${i}-info
fi
cd ${__PWD__}; unset __PWD__

mkdir ${__CONFDIR}
mkdir ${__INFODIR}
__CONFDIR=$(echo "${PWD}/${__CONFDIR}" | sed 's/\/\.\//\//g' )
__INFODIR=$(echo "${PWD}/${__INFODIR}" | sed 's/\/\.\//\//g' )
ln -s ${__CONFDIR} ${__CONFS}/${__TGT}
ln -s ${__INFODIR} ${__INFOS}/${__TGT}

# Extract configuration archives
tar xzf ${__WORKS}/archive.tar.gz -C ${__CONFDIR}
rm ${__WORKS}/archive.tar.gz
mv ${__WORKS}/ls-lR.txt    ${__INFODIR}
mv ${__WORKS}/stat.txt     ${__INFODIR}
mv ${__WORKS}/OS-DIST.txt  ${__INFODIR}
mv ${__WORKS}/PACKAGES.txt ${__INFODIR}

# Source OS Information
. ${__INFODIR}/OS-DIST.txt

##### Postamble ##############################################################
# Remove All Symbolic Links
find ${__CONFDIR} -type l -exec rm -- {} \;

# for OS Special
case "${OS}" in
  freebsd)
  ;;
  linux)
    case "${DIST}" in
      centos*)
        chmod 600 ${__CONFDIR}/etc/shadow
        chmod 600 ${__CONFDIR}/etc/shadow-
        chmod 600 ${__CONFDIR}/etc/gshadow
        chmod 600 ${__CONFDIR}/etc/gshadow-
      ;;
      ubuntu)
      ;;
    esac
  ;;
  *)
    echo "Not Supported Platform" >&2
    exit 1
  ;;
esac
}

##############################################################################
# getconf.rcp
#   Usage: /bin/sh ceor.sh -u USER -h TARGET_NODE getconf.rcp
#
# getconf.rcp is recipe for ceor script.
# This script use Environmental value of followings.
#   __NODECONF  # Root node
#   __WORKS     # Working Directory
#   __INFOS     # Target node information data
#   __CONFS     # Target node configuration files
#   __BAKCONFS  # Node configuration backup files
#
# getconf.rcp gets TARGET_NODE's configuration file and place __NODECONF/...
